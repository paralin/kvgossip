// Code generated by protoc-gen-gogo.
// source: github.com/fuserobotics/kvgossip/ctl/ctl-service.proto
// DO NOT EDIT!

/*
Package ctl is a generated protocol buffer package.

It is generated from these files:
	github.com/fuserobotics/kvgossip/ctl/ctl-service.proto

It has these top-level messages:
	PutGrantRequest
	PutGrantResponse
	GetGrantPoolRequest
	GetGrantPoolResponse
	PutTransactionRequest
	PutTransactionResponse
*/
package ctl

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import data "github.com/fuserobotics/kvgossip/data"
import tx "github.com/fuserobotics/kvgossip/tx"
import grant "github.com/fuserobotics/kvgossip/grant"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.GoGoProtoPackageIsVersion1

// Store a new grant in the DB
type PutGrantRequest struct {
	Pool *grant.GrantAuthorizationPool `protobuf:"bytes,1,opt,name=pool" json:"pool,omitempty"`
}

func (m *PutGrantRequest) Reset()                    { *m = PutGrantRequest{} }
func (m *PutGrantRequest) String() string            { return proto.CompactTextString(m) }
func (*PutGrantRequest) ProtoMessage()               {}
func (*PutGrantRequest) Descriptor() ([]byte, []int) { return fileDescriptorCtlService, []int{0} }

func (m *PutGrantRequest) GetPool() *grant.GrantAuthorizationPool {
	if m != nil {
		return m.Pool
	}
	return nil
}

type PutGrantResponse struct {
	Revocations []*data.SignedData `protobuf:"bytes,1,rep,name=revocations" json:"revocations,omitempty"`
}

func (m *PutGrantResponse) Reset()                    { *m = PutGrantResponse{} }
func (m *PutGrantResponse) String() string            { return proto.CompactTextString(m) }
func (*PutGrantResponse) ProtoMessage()               {}
func (*PutGrantResponse) Descriptor() ([]byte, []int) { return fileDescriptorCtlService, []int{1} }

func (m *PutGrantResponse) GetRevocations() []*data.SignedData {
	if m != nil {
		return m.Revocations
	}
	return nil
}

// Request a pool of grants that would satisfy a request.
type GetGrantPoolRequest struct {
	EntityPublicKey []byte `protobuf:"bytes,1,opt,name=entity_public_key,json=entityPublicKey,proto3" json:"entity_public_key,omitempty"`
	Key             string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *GetGrantPoolRequest) Reset()                    { *m = GetGrantPoolRequest{} }
func (m *GetGrantPoolRequest) String() string            { return proto.CompactTextString(m) }
func (*GetGrantPoolRequest) ProtoMessage()               {}
func (*GetGrantPoolRequest) Descriptor() ([]byte, []int) { return fileDescriptorCtlService, []int{2} }

type GetGrantPoolResponse struct {
	Transaction *tx.Transaction    `protobuf:"bytes,1,opt,name=transaction" json:"transaction,omitempty"`
	Revocations []*data.SignedData `protobuf:"bytes,2,rep,name=revocations" json:"revocations,omitempty"`
	Invalid     []*data.SignedData `protobuf:"bytes,3,rep,name=invalid" json:"invalid,omitempty"`
}

func (m *GetGrantPoolResponse) Reset()                    { *m = GetGrantPoolResponse{} }
func (m *GetGrantPoolResponse) String() string            { return proto.CompactTextString(m) }
func (*GetGrantPoolResponse) ProtoMessage()               {}
func (*GetGrantPoolResponse) Descriptor() ([]byte, []int) { return fileDescriptorCtlService, []int{3} }

func (m *GetGrantPoolResponse) GetTransaction() *tx.Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *GetGrantPoolResponse) GetRevocations() []*data.SignedData {
	if m != nil {
		return m.Revocations
	}
	return nil
}

func (m *GetGrantPoolResponse) GetInvalid() []*data.SignedData {
	if m != nil {
		return m.Invalid
	}
	return nil
}

type PutTransactionRequest struct {
	Transaction *tx.Transaction `protobuf:"bytes,1,opt,name=transaction" json:"transaction,omitempty"`
}

func (m *PutTransactionRequest) Reset()                    { *m = PutTransactionRequest{} }
func (m *PutTransactionRequest) String() string            { return proto.CompactTextString(m) }
func (*PutTransactionRequest) ProtoMessage()               {}
func (*PutTransactionRequest) Descriptor() ([]byte, []int) { return fileDescriptorCtlService, []int{4} }

func (m *PutTransactionRequest) GetTransaction() *tx.Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type PutTransactionResponse struct {
}

func (m *PutTransactionResponse) Reset()                    { *m = PutTransactionResponse{} }
func (m *PutTransactionResponse) String() string            { return proto.CompactTextString(m) }
func (*PutTransactionResponse) ProtoMessage()               {}
func (*PutTransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptorCtlService, []int{5} }

func init() {
	proto.RegisterType((*PutGrantRequest)(nil), "ctl.PutGrantRequest")
	proto.RegisterType((*PutGrantResponse)(nil), "ctl.PutGrantResponse")
	proto.RegisterType((*GetGrantPoolRequest)(nil), "ctl.GetGrantPoolRequest")
	proto.RegisterType((*GetGrantPoolResponse)(nil), "ctl.GetGrantPoolResponse")
	proto.RegisterType((*PutTransactionRequest)(nil), "ctl.PutTransactionRequest")
	proto.RegisterType((*PutTransactionResponse)(nil), "ctl.PutTransactionResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for ControlService service

type ControlServiceClient interface {
	PutGrant(ctx context.Context, in *PutGrantRequest, opts ...grpc.CallOption) (*PutGrantResponse, error)
	GetGrantPool(ctx context.Context, in *GetGrantPoolRequest, opts ...grpc.CallOption) (*GetGrantPoolResponse, error)
	PutTransaction(ctx context.Context, in *PutTransactionRequest, opts ...grpc.CallOption) (*PutTransactionResponse, error)
}

type controlServiceClient struct {
	cc *grpc.ClientConn
}

func NewControlServiceClient(cc *grpc.ClientConn) ControlServiceClient {
	return &controlServiceClient{cc}
}

func (c *controlServiceClient) PutGrant(ctx context.Context, in *PutGrantRequest, opts ...grpc.CallOption) (*PutGrantResponse, error) {
	out := new(PutGrantResponse)
	err := grpc.Invoke(ctx, "/ctl.ControlService/PutGrant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlServiceClient) GetGrantPool(ctx context.Context, in *GetGrantPoolRequest, opts ...grpc.CallOption) (*GetGrantPoolResponse, error) {
	out := new(GetGrantPoolResponse)
	err := grpc.Invoke(ctx, "/ctl.ControlService/GetGrantPool", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controlServiceClient) PutTransaction(ctx context.Context, in *PutTransactionRequest, opts ...grpc.CallOption) (*PutTransactionResponse, error) {
	out := new(PutTransactionResponse)
	err := grpc.Invoke(ctx, "/ctl.ControlService/PutTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ControlService service

type ControlServiceServer interface {
	PutGrant(context.Context, *PutGrantRequest) (*PutGrantResponse, error)
	GetGrantPool(context.Context, *GetGrantPoolRequest) (*GetGrantPoolResponse, error)
	PutTransaction(context.Context, *PutTransactionRequest) (*PutTransactionResponse, error)
}

func RegisterControlServiceServer(s *grpc.Server, srv ControlServiceServer) {
	s.RegisterService(&_ControlService_serviceDesc, srv)
}

func _ControlService_PutGrant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutGrantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServiceServer).PutGrant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ctl.ControlService/PutGrant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServiceServer).PutGrant(ctx, req.(*PutGrantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ControlService_GetGrantPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGrantPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServiceServer).GetGrantPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ctl.ControlService/GetGrantPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServiceServer).GetGrantPool(ctx, req.(*GetGrantPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ControlService_PutTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControlServiceServer).PutTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ctl.ControlService/PutTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControlServiceServer).PutTransaction(ctx, req.(*PutTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ControlService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ctl.ControlService",
	HandlerType: (*ControlServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PutGrant",
			Handler:    _ControlService_PutGrant_Handler,
		},
		{
			MethodName: "GetGrantPool",
			Handler:    _ControlService_GetGrantPool_Handler,
		},
		{
			MethodName: "PutTransaction",
			Handler:    _ControlService_PutTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptorCtlService,
}

var fileDescriptorCtlService = []byte{
	// 418 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x52, 0xdd, 0x8e, 0x93, 0x40,
	0x14, 0x96, 0xc5, 0xf8, 0x73, 0xba, 0xd9, 0xd6, 0x71, 0xd7, 0x20, 0xc6, 0xc4, 0x70, 0x65, 0x4c,
	0x1c, 0x5c, 0x8c, 0x26, 0x5e, 0x1a, 0x57, 0x37, 0x71, 0x6f, 0x1a, 0xea, 0x7d, 0x03, 0x74, 0xa4,
	0x93, 0x22, 0x83, 0xcc, 0x81, 0xb4, 0xbe, 0x91, 0x4f, 0xe5, 0xab, 0x38, 0xcc, 0x40, 0x4b, 0xb1,
	0xa6, 0x7a, 0x01, 0x99, 0x9c, 0xef, 0x67, 0xbe, 0x73, 0xe6, 0xc0, 0xdb, 0x94, 0xe3, 0xb2, 0x8a,
	0x69, 0x22, 0xbe, 0xf9, 0x5f, 0x2b, 0xc9, 0x4a, 0x11, 0x0b, 0xe4, 0x89, 0xf4, 0x57, 0x75, 0x2a,
	0xa4, 0xe4, 0x85, 0x9f, 0x60, 0xd6, 0x7c, 0x2f, 0x15, 0x56, 0xf3, 0x84, 0xd1, 0xa2, 0x14, 0x28,
	0x88, 0xad, 0x4a, 0xee, 0xab, 0xa3, 0xe2, 0x45, 0x84, 0x91, 0xfe, 0x19, 0x99, 0xfb, 0xe6, 0xa8,
	0x02, 0xd7, 0x3e, 0x96, 0x51, 0x2e, 0xa3, 0x04, 0xb9, 0xc8, 0x5b, 0x59, 0x70, 0x54, 0x96, 0x2a,
	0x0d, 0x9a, 0xbf, 0xd1, 0x78, 0x57, 0x30, 0x9e, 0x56, 0x78, 0xdd, 0x54, 0x42, 0xf6, 0xbd, 0x62,
	0x12, 0xc9, 0x25, 0xdc, 0x2e, 0x84, 0xc8, 0x1c, 0xeb, 0x99, 0xf5, 0x7c, 0x14, 0x3c, 0xa5, 0x86,
	0xae, 0x29, 0xef, 0x2b, 0x5c, 0x8a, 0x92, 0xff, 0x88, 0x9a, 0x5b, 0xa7, 0x8a, 0x14, 0x6a, 0xaa,
	0xf7, 0x09, 0x26, 0x3b, 0x17, 0x59, 0x88, 0x5c, 0x32, 0x12, 0xc0, 0xa8, 0x64, 0xb5, 0x48, 0x34,
	0x57, 0x2a, 0x37, 0x5b, 0xb9, 0x4d, 0xa8, 0x6e, 0x73, 0xc6, 0xd3, 0x9c, 0x2d, 0xae, 0xd4, 0x31,
	0xec, 0x93, 0xbc, 0x19, 0x3c, 0xbc, 0x66, 0xc6, 0x47, 0xbb, 0xb7, 0x89, 0x5e, 0xc0, 0x03, 0x96,
	0x23, 0xc7, 0xcd, 0xbc, 0xa8, 0xe2, 0x8c, 0x27, 0xf3, 0x15, 0xdb, 0xe8, 0x78, 0xa7, 0xe1, 0xd8,
	0x00, 0x53, 0x5d, 0xbf, 0x61, 0x1b, 0x32, 0x01, 0xbb, 0x41, 0x4f, 0x14, 0x7a, 0x3f, 0x6c, 0x8e,
	0xde, 0x4f, 0x0b, 0xce, 0xf7, 0x5d, 0xdb, 0x84, 0x97, 0x30, 0xea, 0x0d, 0xb1, 0xed, 0x77, 0x4c,
	0x71, 0x4d, 0xbf, 0xec, 0xca, 0x61, 0x9f, 0x33, 0x6c, 0xea, 0xe4, 0x1f, 0x9a, 0x52, 0xe9, 0xef,
	0xf2, 0xbc, 0x8e, 0x32, 0xbe, 0x70, 0xec, 0xbf, 0xf0, 0x3b, 0x82, 0xf7, 0x19, 0x2e, 0xd4, 0x20,
	0xfb, 0xd7, 0x6f, 0x1f, 0xe5, 0x7f, 0xb3, 0x7a, 0x0e, 0x3c, 0x1a, 0x7a, 0x99, 0xc6, 0x83, 0x5f,
	0x16, 0x9c, 0x7d, 0x10, 0x39, 0x96, 0x22, 0x9b, 0x99, 0x7d, 0x25, 0xef, 0xe0, 0x5e, 0xf7, 0x82,
	0xe4, 0x9c, 0xaa, 0xb5, 0xa5, 0x83, 0xb5, 0x70, 0x2f, 0x06, 0x55, 0xe3, 0xe5, 0xdd, 0x22, 0x1f,
	0xe1, 0xb4, 0x3f, 0x5e, 0xe2, 0x68, 0xe2, 0x81, 0x77, 0x74, 0x1f, 0x1f, 0x40, 0xb6, 0x36, 0x37,
	0x70, 0xb6, 0x1f, 0x97, 0xb8, 0xdd, 0x8d, 0x7f, 0xce, 0xc3, 0x7d, 0x72, 0x10, 0xeb, 0xcc, 0xe2,
	0x3b, 0x7a, 0xbb, 0x5f, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xc6, 0x28, 0x96, 0x4c, 0xb9, 0x03,
	0x00, 0x00,
}
